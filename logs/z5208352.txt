Week 1

We read through the projects to determine what would be our top preferences. The group was fairly unanimous so this was a smooth process. The only challenge is waiting until we find out what project we can do and working immediately.

Week 2

We decided on our project this week. We also began background research as to what API's we wanted to use. Also looked at existing portfolio management systems in order to get an idea of how we wanted to setup our website.

Week 3

This week we completed the proposal. This was relatively straightforward. I also broke down the components of the epic story of the user profile into separate stories. We also decided on which API's we are going to use.

Week 4

Created the login service. Users can signup and consequently login to the system. At this stage user data is stored in a csv file which is read each time we validate a user's login.

Week 5

Adjusted the login service so that it uses the database. Now when a user is created they are placed into the 'users' table. Using databases for the first time was an obstacle I faced. Using advice from other members of the team I was able to implement this with minimal difficulty. When using the application, users can signup and login to the system to begin using the functionality.

Week 6

Began using the flask login module in order to validate users. This means we could use @login_required to ensure users cannot bypass the login system. The main obstacle was deciding how to store user information and parse this to the login module, as we stored user data in the database rather than a detailed user object. I decided to create a user object that contains the user's email as the unique identifier that can be used to access the database.

Week 7

This was a lighter week for me, I mostly tried to understand the front end code and how it links to the routes. Due to other assessments I didn't write much code in this week, but now have a better grasp of how the front end links to the backend.

Week 8

Adapted the login service to the front end. Initially it was set up such that the login and signup forms were on their own html page, however now they are forms accessible from the dashboard. As I am unfamiliar with html and writing corresponding wrotes this required assistance from other members in the group.

Week 9

During this week I wrote the routes for adding stocks to a portfolio or the watchlist. This meant writing logic in the backend, and connecting this to the route. The route needed to act on the user object to check whether there were existing stocks in the watchlist/portfolio accordingly. This presented a challenge for me as I am unfamiliar with SQLite and required an understanding of the database setup, which is quite foreign for me. Fortunately I was able to work through this without too much difficulty.

Week 10

This final week consisted of adding the finishing touches. I wrote the route to update a user's password which also meant accessing the database. This required communication with other team member's using the frontend to ensure it worked smothly.

Week 11

This week has been quite minimal as we submit the code on Tuesday. Merely discussing details with the group and making sure there are no glaring errors. Final error checking and testing.
